#!/bin/sh
#
# http://github.com/mitchweaver
#
# periodically update weather data from wttr.in
#
# (useful for status bars, where you always want the information
#  available, but don't want to be constantly pulling from the site)
#

# -/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/
# settings
: "${WEATHERD_FILE:=${XDG_CONFIG_HOME:-${HOME}/.config}/weatherd/location}"
: "${WEATHERD_OUTPUT_FILE:=${XDG_CACHE_HOME:-${HOME}/.cache}/weatherd/output}"
: "${WEATHERD_INTERVAL:=300}" # default: 5 minutes
# -/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/

usage() {
>&2 cat <<EOF
Usage: ${0##*/} [-l] [-s] [-d]
---------------------------------------
[no args]    |   print info
-l           |   print configured location
-s           |   set location
-d           |   start daemon

Environment variables:
---------------------------------------
Location file:   \$WEATHERD_FILE
Output file:     \$WEATHERD_OUTPUT_FILE
Update interval: \$WEATHERD_INTERVAL
EOF
exit 1
}

init() {
    mkdir -p \
        "${WEATHERD_FILE%/*}" \
        "${WEATHERD_OUTPUT_FILE%/*}" \
        2>/dev/null ||:
    touch "$WEATHERD_OUTPUT_FILE"
    # blank output file if location is not set
    if [ ! -f "$WEATHERD_FILE" ] ; then
        :> "$WEATHERD_OUTPUT_FILE"
    fi
}

start_daemon() {
    while : ; do
        unset loc info
        loc=$(get_location)
        if [ "$loc" ] ; then
            info=$(\
                curl -Lfs \
                    "https://wttr.in/$loc?0uTQ&format=%c%t" | \
                    sed -e 's/\+//' -e 's/  / /'
            )
            if [ "$info" ] ; then
                printf '%s\n' "$info" > "$WEATHERD_OUTPUT_FILE"
            else
                printf 'N/A\n' > "$WEATHERD_OUTPUT_FILE"
                sleep 30
                continue
            fi
        fi
        sleep "$WEATHERD_INTERVAL"
    done
}

get_location() {
    if [ -f "$WEATHERD_FILE" ] ; then
        read -r loc < "$WEATHERD_FILE"
        if [ "$loc" ] ; then
            printf '%s\n' "$loc"
        fi
    else
        printf 'No location.\n'
    fi
}

set_location() {
    printf '%s\n' "$1" > "$WEATHERD_FILE"
    printf 'Location set as "%s".\n' "$1"
}

print_info() {
    if [ -f "$WEATHERD_OUTPUT_FILE" ] ; then
        read -r info < "$WEATHERD_OUTPUT_FILE"
        if [ "$info" ] ; then
            printf '%s\n' "$info"
        fi
    else
        printf 'N/A.\n'
    fi
}

main() {
    init
    case ${1#-} in
        h)
            usage
            ;;
        l)
            get_location
            ;;
        s)
            if [ "$2" ] ; then
                set_location "$2"
            else
                usage
            fi
            ;;
        d)
            start_daemon
            ;;
        *)
            print_info
    esac
}

main "$@"
