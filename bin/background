#!/bin/sh
#
# http://github.com/mitchweaver/bin
#
# yet another wallpaper setter
#

save_location=${HOME}/.local/wallpaper

die() {
    >&2 printf '%s\n' "$*"
    exit 1
}

usage() {
>&2 cat <<EOF
${0##*/} - yet another wallpaper setter

Usage: ${0##*/} image


[-s]   stetch
[-t]   tile
[-b]   blur
EOF

    die "Usage: ${0##*/} [-t tile] [-s stretch] file"
}

checks() {
    pgrep Hyprland >/dev/null && return
    case $(loginctl show-session "$XDG_SESSION_ID" -p Type) in
        *wayland*)
            command -v swaybg >/dev/null || die 'install swaybg dummy'
            ;;
        *)
            command -v xwallpaper >/dev/null || die 'install xwallpaper dummy'
    esac
    [ -f "$save_location" ] || die "$save_location not found"
}

# reads size of the image, if smaller than 24 it should be tiled
should_tile() {
read -r size _ << EOF
$(du -k "$1")
EOF

    # tile image if its smaller than 24kb
    if [ "$size" -lt 24 ] ; then
        MODE=tile
    fi
}

do_copy() {
    if [ -f "$1" ] ; then
        cp -f "$1" "$save_location"
    else
        die "$1 not found"
    fi
}

set_pape() {
    if pgrep -f Hyprland >/dev/null ; then
        pkill swaybg
        nohup swaybg -m "${MODE:-fill}" -i "$1" >/dev/null 2>&1 &
        return
    fi
    case $(loginctl show-session "$XDG_SESSION_ID" -p Type) in
        *wayland*)
            pkill swaybg
            nohup swaybg -m "${MODE:-fill}" -i "$1" >/dev/null 2>&1 &
            ;;
        *)
            echo "Using mode: ${MODE:-zoom}"
            echo "Setting wallpaper: $1"
            xwallpaper --"${MODE:-zoom}" "$1"
    esac

}

blur() {
    convert "$1" -blur "0x1${2}" "$3"
}

main() {
    while [ "$1" ] ; do
        case ${1#-} in
            h)
                usage
                ;;
            b)
                case $# in
                    2)
                        [ -f "$2" ] || die "$2 is not a file"
                        blur "$2" 8 "$save_location"
                        ;;
                    3)
                        [ -f "$3" ] || die "$3 is not a file"
                        blur "$3" "$2" "$save_location"
                esac
                shift
                break
                ;;
            t)
                MODE=tile
                shift
                ;;
            s)
                MODE=stretch
                shift
                ;;
            *)
                if [ -f "$1" ] ; then
                    break
                else
                    die "$1 is not a file"
                fi
        esac
        shift
    done

    if [ -f "$1" ] ; then
        do_copy "$1"
    fi
    should_tile "$save_location"
    checks "$save_location"
    set_pape "$save_location"
}

main "$@"
