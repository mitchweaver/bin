#!/bin/sh
#
# http://github.com/mitchweaver/bin
#
# scrap - SCReen cAPture
#
# Wrapper for both X11 and Wayland, working with both Gnome and wl-roots
#
# X11 deps: imagemagick, slop, xclip
# Wayland deps: slurp, grim, wl-clipboard
# softdeps: jpegoptim, a plumber via $PLUMBER
#
# -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*

SCRAP_CACHE_DIR=${XDG_CACHE_HOME:-~/.cache}/scrap
PLUMBER=${PLUMBER:-opn}

# don't run if already selecting (happens with keybinds)
if pgrep -x slop >/dev/null ; then
    die "slop already running - exiting"
fi

usage() {
>&2 cat <<EOF
${0##*/} - SCReen cAPture

Usage: scrap [-n] <file>

Options:
---------------------------
[-n]    no crop
[-u]    upload after capture
[-r]    re-open last scrap
[-s]    save last scrap
[-o]    open scrap after capture
EOF
    exit 1
}

die() { >&2 printf '%s\n' "$*" ; exit 1 ; }

while [ "$1" ] ; do
    case $1 in
        -h)
            usage
            ;;
        -n)
            nocrop=true
            ;;
        -u)
            upload=true
            ;;
        -f)
            open=true
            ;;
        -s)
            if [ -L /tmp/scrap.jpg ] ; then
                mv -- "$(readlink /tmp/scrap.jpg)" "${HOME}"/
            fi
            exit
            ;;
        -r)
            $PLUMBER /tmp/scrap.jpg &
            exit
            ;;
        -*)
            # safely ignore invalid options
            ;;
        *)
            file="$*"
            set --
    esac
    [ "$1" ] && shift
done

if [ "$file" ] ; then
    dir=${file%/*}
    [ "$dir" != "$file" ] && mkdir -p "$dir"
else
    mkdir -p "$SCRAP_CACHE_DIR"
    count=$(find "$SCRAP_CACHE_DIR" -maxdepth 1 -type f -name 'scrap*' | wc -l)
    file="$SCRAP_CACHE_DIR/scrap-$count@$(date +%Y-%m-%d-%H-%M-%S).jpg"
fi

if pgrep -f wayland >/dev/null ; then
    # we are running gnome, we can use gnome-screenshot
    if pgrep -f gnome-shell >/dev/null ; then
        if [ "$nocrop" ] ; then
            gnome-screenshot -c -p -f "$file"
        else
            gnome-screenshot -c -a -p -f "$file"
        fi
    else
        if [ "$nocrop" ] ; then
            grim "$file"
        else
            if command -v slurp >/dev/null ; then
                geom=$(slurp 2>/dev/null)
            fi
            [ "$geom" ] || die "couldn't get geometry from slurp"
            grim -g "$geom" "$file"
        fi
    fi
# we are on X11, we can use import from ImageMagick
else
    if [ "$nocrop" ] ; then
        import -quiet -window root "$file"
    else
        if command -v slop >/dev/null ; then
            geom=$(slop -f '%wx%h+%x+%y' 2>/dev/null)
        fi
        [ "$geom" ] || die "couldn't get geometry from slop"
        # shellcheck disable=2086
        set -- -crop $geom "$file"
        import -quiet -window root "$@"
    fi
fi

if [ ! -f "$file" ] ; then
    die "Couldn't get screenshot for '$file'"
fi

if [ "$upload" ] ; then
    if command -v upl >/dev/null ; then
        url=$(upl "$file")
    else
        url=$(curl -sF "file=@$file" https://0x0.st 2>/dev/null)
    fi
    if [ "$url" ] ; then
        notify-send "${0##*/}: $url"
        printf '%s\n' "$url"
    else
        notify-send "${0##*/}: failed to upload"
        die "failed to upload '$file'"
    fi
fi


if ! pgrep -f wayland >/dev/null ; then
    if [ "$upload" ] && [ "$url" ] ; then
        # copy url to clipboard
        if command -v xsel >/dev/null ; then
            printf '%s\n' "$url" | xsel -ip
            printf '%s\n' "$url" | xsel -is
            printf '%s\n' "$url" | xsel -ib
        fi
    else
        # copy image to clipboard
        if command -v xclip >/dev/null ; then
            xclip -selection clipboard -t image/jpg < "$file"
        fi
    fi
fi

# create a symlink to last scrap for ease of use
ln -sf "$file" /tmp/scrap.jpg

if [ -e ~/tmp ] ; then
    ln -sf "$file" ~/tmp/scrap.jpg
fi

# optimize file if available
if command -v jpegoptim >/dev/null ; then
    jpegoptim -sq "$file"
fi

[ "$open" ] && exec $PLUMBER "$file"
